<html>

<head>
    <link rel="icon" href="images/jfrog-glasses.png">
    <title>LorenyTestbench</title>
    <meta name="google-site-verification" content="pcbPwXra8N-7_ZVG_KjYO35zhbiXCZqn3E5RpyMUdiM" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <base target="_top">

    <script>
        window.addEventListener('load', (event) => {
            var quotes = ["If you're going through hell, keep going.",
                "Either you run the day or the day runs you.",
                "I was born not knowing and have had only a little time to change that here and there.",
                "People say nothing is impossible, but I do nothing every day."
            ];

            function getRandomInt(max) {
                return Math.floor(Math.random() * Math.floor(max));
            }
            document.getElementById("quote").innerHTML = quotes[getRandomInt(quotes.length)]
        })

        var href = window.location.href
        var host = href.split("/")

        url = 'ws://' + host[2] + '/ws';
        c = new WebSocket(url);
        c.onopen = function () {
            console.log("Primary Socket Connected.");
            connectedPrimary = true;
            //c.send("sendImageUpdates");
        };
        c.onmessage = function (msg) {
            console.log("update recieved at " + Date() + JSON.parse(msg.data));
            //document.getElementById("test5").innerHTML = "";
            var ul = document.getElementById("test5");

            // update the health check data when there is an update through the websocket
            var fragment = document.createDocumentFragment();
            var json = JSON.parse(msg.data)
            for (var i = 0; i < json.data.length; i++) {
                var healthIconId = json.data[i].id + "_health_icon"
                if (json.data[i].healthPing == "OK") {
                    //console.log("service up", json.data[i].id)
                    document.getElementById(healthIconId).innerHTML = "cloud_done"
                    if (document.getElementById(healthIconId).classList.contains('red-text')) {
                        document.getElementById(healthIconId).classList.remove('red-text');
                    }
                    document.getElementById(json.data[i].id + "_stop_action").classList.remove('disabled')
                    document.getElementById(json.data[i].id + "_go_action").classList.remove('disabled')
                    document.getElementById(json.data[i].id + "_restart_action").classList.remove('disabled')
                    document.getElementById(json.data[i].id + "_start_action").classList.add('disabled')
                    document.getElementById(healthIconId).classList.remove('yellow-text');
                    document.getElementById(healthIconId).classList.add('green-text');
                } else if (json.data[i].healthPing == "LIMBO") {
                    document.getElementById(healthIconId).innerHTML = "cloud_upload"
                    document.getElementById(json.data[i].id + "_stop_action").classList.add('disabled')
                    document.getElementById(json.data[i].id + "_go_action").classList.remove('disabled')
                    document.getElementById(json.data[i].id + "_restart_action").classList.add('disabled')
                    document.getElementById(json.data[i].id + "_start_action").classList.add('disabled')
                    document.getElementById(healthIconId).classList.remove('red-text');
                    document.getElementById(healthIconId).classList.remove('green-text');
                    document.getElementById(healthIconId).classList.add('yellow-text');

                } else {
                    //console.log("service down", json.data[i].id)
                    document.getElementById(healthIconId).innerHTML = "cloud_off"
                    if (document.getElementById(healthIconId).classList.contains('green-text')) {
                        document.getElementById(healthIconId).classList.remove('green-text');

                    }
                    document.getElementById(json.data[i].id + "_stop_action").classList.add('disabled')
                    document.getElementById(json.data[i].id + "_go_action").classList.add('disabled')
                    document.getElementById(json.data[i].id + "_restart_action").classList.add('disabled')
                    document.getElementById(json.data[i].id + "_start_action").classList.remove('disabled')
                    document.getElementById(healthIconId).classList.remove('yellow-text');
                    document.getElementById(healthIconId).classList.add('red-text');
                }
                for (var j = 0; j < json.data[i].backend.length; j++) {
                    document.getElementById(json.data[i].id + json.data[i].backend[j].service).innerHTML = json.data[i].backend[j].health

                }
            }
            c.send(msg.data);
        }

        c.onclose = function () {
            c = null;
        }

        // const button = document.getElementById('post-btn');
        //             button.addEventListener('click', async _ => {
        //   try {     
        //     const response = await fetch('yourUrl', {
        //       method: 'post',
        //       body: {
        //         // Your body
        //       }
        //     });
        //     console.log('Completed!', response);
        //   } catch(err) {
        //     console.error(`Error: ${err}`);
        //   }
        // });

        //msg is stop or start if msg2 is null, else msg is stop, msg2 is start. triggered by onclick
        function actionable(msg, msg2, title, state) {
            M.toast({ html: title + ' is being ' + state + 'ed', classes: 'rounded indigo' })
            console.log(msg, msg2)
            var xhr = new XMLHttpRequest();

            xhr.onreadystatechange = function () {
                if (this.readyState == 4 && this.status != 200) {
                    // Typical action to be performed when the document is ready:
                    var resp = JSON.parse(xhr.response)
                    M.toast({ html: resp.response, classes: 'rounded red' })
                }
            };

            xhr.open("POST", 'http://' + host[2] + '/actionable', true);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send(JSON.stringify({
                first: msg,
                second: msg2
            }));

        }

        // window.addEventListener('load', (event) => {
        //     const list = document.getElementsByTagName("a")
        //     console.log(list.length)
        //     for (var i = 0; i < list.length; i++) {
        //         if (list[i].id.includes("_action")) {
        //             list[i].addEventListener('click', async e => {
        //                 console.log("clicked", e);
        //             } 

        //             );
        //             console.log(list[i].id)
        //         }
        //     }
        // });

    </script>
</head>

<body>
    {{ template "navbar" . }}
    <div class="container">
        <style>
            body {
                background-color: #F5F5F5;
            }
        </style>


        <ul class="sidenav" id="mobile-demo">
            <li><a href="http://materializecss.com/">CSS</a></li>
        </ul>
        <blockquote id="quote"></blockquote>
        <div id="services" class="col s12">
            <h3 id="helloServices">Services</h3>
            <div class="row" id="service_row"></div>
            <div class="card-content grey lighten-4">
                <div id="test4">
                    <ul class="collapsible popout" id="test5">

                        {{range .art_data}}
                        <li>
                            {{ if (eq .HealthPing "OK" )}}
                            <div class="collapsible-header" id={{.ID}}><i class="material-icons green-text"
                                    id="{{.ID}}_health_icon">cloud_done</i>{{.Title}}</div>
                            {{else}}
                            <div class="collapsible-header" id={{.ID}}><i class="material-icons red-text"
                                    id="{{.ID}}_health_icon">cloud_off</i>{{.Title}}</div>
                            {{end}}
                            <div class="collapsible-body">
                                <span>
                                    <table>
                                        <thead>
                                            <th>Service</th>
                                            <th>Port</th>
                                            <th>Health</th>
                                            {{$id := .ID}}
                                            {{range .Backend}}
                                            <tr>
                                                <td>{{.Service}}</td>
                                                <td>{{.Port}} </td>
                                                <td id={{$id}}{{.Service}}>{{.Health}}</td>
                                            </tr>
                                            {{ end }}
                                            <tr>
                                                <p>

                                                    <a class="waves-effect waves-light btn-flat btn disabled"
                                                        id="{{.ID}}_stop_action"
                                                        onClick="actionable({{.StopCmd}}, null, {{.Title}}, 'stop')">
                                                        <i class="material-icons left">stop</i>
                                                        stop
                                                    </a>
                                                    <a class="waves-effect waves-light btn-flat btn disabled"
                                                        id="{{.ID}}_restart_action"
                                                        onClick="actionable({{.StopCmd}}, {{.StartCmd}}, {{.Title}}, 'restart')">
                                                        <i class="material-icons left">repeat</i>
                                                        restart
                                                    </a>
                                                    <a class="waves-effect waves-light right-align btn-small btn-flat disabled"
                                                        id="{{.ID}}_go_action" href="{{.URL}}">
                                                        <i class="material-icons left">navigate_next</i>
                                                        GO
                                                    </a>

                                                    <a class="waves-effect waves-light btn-flat btn disabled"
                                                        id="{{.ID}}_start_action"
                                                        onClick="actionable({{.StartCmd}}, null, {{.Title}}, 'start')">
                                                        <i class="material-icons left">play_arrow</i>
                                                        start
                                                    </a>


                                                </p>
                                            </tr>
                                    </table>
                                    {{.Content}}
                                </span></div>
                        </li>
                        {{ end }}
                    </ul>
                </div>
            </div>
        </div>
        <div id="backend" class="col s12">
            <h3>Backend Docker Containers</h3>
            <div class="card-content grey lighten-4">
                <div id="test4">
                    <ul class="collapsible popout">
                        {{range .containers}}
                        <li>
                            {{ if (eq .State "running" )}}
                            <div class="collapsible-header"><i
                                    class="material-icons green-text">cloud_done</i>{{.Names}}
                            </div>
                            {{else}}
                            <div class="collapsible-header"><i class="material-icons red-text">cloud_off</i>{{.Names}}
                            </div>
                            {{end}}
                            <div class="collapsible-body"><span>
                                    <tbody>
                                        <tr>
                                            <td>{{.Image}}</td>
                                            <td>{{range .Ports}} {{.PublicPort}}:{{.PrivatePort}} {{ end }}</td>
                                            <td>{{.State}}, {{.Status}}</td>
                                            <p>{{ if (eq .State "running" )}}
                                                <a class="waves-effect waves-light btn-flat btn" id="{{.Id}}"
                                                    href="/authed/stop/{{.Id}}"><i
                                                        class="material-icons left">delete</i>stop</a>
                                                <a class="waves-effect waves-light btn-flat btn"><i
                                                        class="material-icons left">delete</i>restart</a>
                                                {{else}}
                                                <a class="waves-effect waves-light btn-flat btn" id="{{.Id}}"
                                                    href="/authed/start/{{.Id}}"><i
                                                        class="material-icons left">cloud</i>start</a>
                                                {{end}}
                                            </p>
                                        </tr>
                                    </tbody>
                                </span></div>
                        </li>
                        {{ end }}
                    </ul>
                </div>
            </div>

            <div id="logs" class="col s12">
                <h3>Logs</h3>
            </div>
        </div>
        {{ template "footer" }}
</body>

</html>